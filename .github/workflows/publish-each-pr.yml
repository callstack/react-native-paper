name: Expo Preview
on: [pull_request]

permissions:
  contents: read
  pull-requests: write

jobs:
  publish:
    name: Install and publish
    runs-on: ubuntu-latest
    if: github.event.pull_request.head.repo.full_name == 'callstack/react-native-paper'
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version-file: .nvmrc

      - name: Setup Expo
        uses: expo/expo-github-action@d300b960e9f91a8c59b2aaca92e89ad70b0785ac # v7
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Restore dependencies
        id: yarn-cache
        uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}-${{ hashFiles('**/package.json', '!node_modules/**') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: |
          sudo corepack enable
          yarn --cwd example --immutable
          yarn --immutable

      - name: Cache dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: '**/node_modules'
          key: ${{ steps.yarn-cache.outputs.cache-primary-key }}

      - name: Publish Expo app
        working-directory: ./example
        run: CI=1 rm -rf android && eas update --branch=pr-${{ github.event.number }} --message="$(git log -1 --pretty=%B)"

      - name: Get expo config
        working-directory: ./example
        id: expo
        run: echo "EXPO_CONFIG=$(npx expo config --json)" >> $GITHUB_OUTPUT
        
      - name: Get branch info from EAS
        working-directory: ./example
        id: eas
        run: |
            branch_id=$(eas branch:view pr-${{ github.event.number }} --json --non-interactive | jq -r '.id')
            echo "BRANCH_ID=$branch_id" >> $GITHUB_OUTPUT

      - name: Comment on PR
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const config = JSON.parse('${{ steps.expo.outputs.EXPO_CONFIG }}');

            const branchId = '${{ steps.eas.outputs.BRANCH_ID }}';
            const channel = 'pr-${{ github.event.number }}';

            const { sdkVersion } = config;
            const { projectId } = config.extra.eas;

            const url = `https://expo.dev/@react-native-paper/react-native-paper-example?serviceType=eas&distribution=expo-go&scheme=exp+react-native-paper-example&channel=${channel}&sdkVersion=${sdkVersion}`;
            const body = `The mobile version of example app from this branch is ready! You can [see it here.](${url})
            <a href="${url}"><img src="https://qr.expo.dev/eas-update?projectId=${projectId}&runtimeVersion=exposdk:${sdkVersion}&branchId=${branchId}" height="200px" width="200px"></a>
            `;

            const comments = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            if (comments.data.some(comment => comment.body === body)) {
              return;
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            })
