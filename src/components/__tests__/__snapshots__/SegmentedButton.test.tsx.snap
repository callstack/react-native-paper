// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders segmented button 1`] = `
<View
  style={
    [
      {
        "flexDirection": "row",
      },
      undefined,
    ]
  }
>
  <View
    style={
      [
        {
          "backgroundColor": "rgba(232, 222, 248, 1)",
          "borderBottomRightRadius": 0,
          "borderColor": "rgba(121, 116, 126, 1)",
          "borderEndWidth": 0,
          "borderRadius": 20,
          "borderTopRightRadius": 0,
          "borderWidth": 1,
        },
        {
          "borderStyle": "solid",
          "flex": 1,
          "minWidth": 76,
        },
        [
          undefined,
          {},
        ],
      ]
    }
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": undefined,
          "checked": true,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "overflow": "hidden",
          },
          {
            "borderBottomRightRadius": 0,
            "borderEndWidth": 0,
            "borderRadius": 20,
            "borderTopRightRadius": 0,
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingHorizontal": 16,
              "paddingVertical": 9,
            },
            {
              "paddingVertical": 9,
            },
          ]
        }
      >
        <Text
          numberOfLines={1}
          selectable={false}
          style={
            [
              {
                "textAlign": "left",
              },
              {
                "color": "rgba(28, 27, 31, 1)",
                "writingDirection": "ltr",
              },
              [
                {
                  "fontFamily": "System",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
                [
                  {
                    "textAlign": "center",
                  },
                  {
                    "color": "rgba(29, 25, 43, 1)",
                    "fontFamily": "System",
                    "fontSize": 14,
                    "fontWeight": "500",
                    "letterSpacing": 0.1,
                    "lineHeight": 20,
                  },
                  undefined,
                ],
              ],
            ]
          }
          testID="undefined-label"
        />
      </View>
    </View>
  </View>
  <View
    style={
      [
        {
          "backgroundColor": "transparent",
          "borderBottomLeftRadius": 0,
          "borderColor": "rgba(121, 116, 126, 1)",
          "borderRadius": 20,
          "borderTopLeftRadius": 0,
          "borderWidth": 1,
        },
        {
          "borderStyle": "solid",
          "flex": 1,
          "minWidth": 76,
        },
        [
          undefined,
          {},
        ],
      ]
    }
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": undefined,
          "checked": false,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "overflow": "hidden",
          },
          {
            "borderBottomLeftRadius": 0,
            "borderRadius": 20,
            "borderTopLeftRadius": 0,
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingHorizontal": 16,
              "paddingVertical": 9,
            },
            {
              "paddingVertical": 9,
            },
          ]
        }
      >
        <Text
          numberOfLines={1}
          selectable={false}
          style={
            [
              {
                "textAlign": "left",
              },
              {
                "color": "rgba(28, 27, 31, 1)",
                "writingDirection": "ltr",
              },
              [
                {
                  "fontFamily": "System",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
                [
                  {
                    "textAlign": "center",
                  },
                  {
                    "color": "rgba(28, 27, 31, 1)",
                    "fontFamily": "System",
                    "fontSize": 14,
                    "fontWeight": "500",
                    "letterSpacing": 0.1,
                    "lineHeight": 20,
                  },
                  undefined,
                ],
              ],
            ]
          }
          testID="undefined-label"
        />
      </View>
    </View>
  </View>
</View>
`;
