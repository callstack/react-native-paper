// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders disabled toggle button 1`] = `
<View
  collapsable={false}
  style={
    {
      "backgroundColor": "rgba(29, 25, 43, 0.12)",
      "borderRadius": 4,
      "height": 42,
      "margin": 0,
      "shadowColor": "#000",
      "shadowOffset": {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
      "width": 42,
    }
  }
  testID="icon-button-container-outer-layer"
>
  <View
    collapsable={false}
    style={
      {
        "backgroundColor": "rgba(29, 25, 43, 0.12)",
        "borderColor": "rgba(121, 116, 126, 1)",
        "borderRadius": 4,
        "borderWidth": 0,
        "elevation": 0,
        "flex": 1,
        "overflow": "hidden",
        "shadowColor": "#000",
        "shadowOffset": {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
      }
    }
    testID="icon-button-container"
  >
    <View
      accessibilityComponentType="button"
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": true,
          "expanded": undefined,
          "selected": true,
        }
      }
      accessibilityTraits={
        [
          "button",
          "disabled",
        ]
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      centered={true}
      collapsable={false}
      focusable={true}
      hitSlop={
        {
          "bottom": 6,
          "left": 6,
          "right": 6,
          "top": 6,
        }
      }
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          false,
          [
            {
              "alignItems": "center",
              "flexGrow": 1,
              "justifyContent": "center",
            },
            undefined,
          ],
        ]
      }
      testID="icon-button"
    >
      <Text
        accessibilityElementsHidden={true}
        importantForAccessibility="no-hide-descendants"
        pointerEvents="none"
        selectable={false}
        style={
          [
            {
              "color": "rgba(28, 27, 31, 0.38)",
              "fontSize": 24,
            },
            [
              {
                "lineHeight": 24,
                "transform": [
                  {
                    "scaleX": 1,
                  },
                ],
              },
              {
                "backgroundColor": "transparent",
              },
            ],
          ]
        }
      >
        heart
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders toggle button 1`] = `
<View
  collapsable={false}
  style={
    {
      "backgroundColor": "rgba(29, 25, 43, 0.12)",
      "borderRadius": 4,
      "height": 42,
      "margin": 0,
      "shadowColor": "#000",
      "shadowOffset": {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
      "width": 42,
    }
  }
  testID="icon-button-container-outer-layer"
>
  <View
    collapsable={false}
    style={
      {
        "backgroundColor": "rgba(29, 25, 43, 0.12)",
        "borderColor": "rgba(121, 116, 126, 1)",
        "borderRadius": 4,
        "borderWidth": 0,
        "elevation": 0,
        "flex": 1,
        "overflow": "hidden",
        "shadowColor": "#000",
        "shadowOffset": {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
      }
    }
    testID="icon-button-container"
  >
    <View
      accessibilityComponentType="button"
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": true,
        }
      }
      accessibilityTraits="button"
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      centered={true}
      collapsable={false}
      focusable={true}
      hitSlop={
        {
          "bottom": 6,
          "left": 6,
          "right": 6,
          "top": 6,
        }
      }
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          false,
          [
            {
              "alignItems": "center",
              "flexGrow": 1,
              "justifyContent": "center",
            },
            undefined,
          ],
        ]
      }
      testID="icon-button"
    >
      <Text
        accessibilityElementsHidden={true}
        importantForAccessibility="no-hide-descendants"
        pointerEvents="none"
        selectable={false}
        style={
          [
            {
              "color": "rgba(73, 69, 79, 1)",
              "fontSize": 24,
            },
            [
              {
                "lineHeight": 24,
                "transform": [
                  {
                    "scaleX": 1,
                  },
                ],
              },
              {
                "backgroundColor": "transparent",
              },
            ],
          ]
        }
      >
        heart
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders unchecked toggle button 1`] = `
<View
  collapsable={false}
  style={
    {
      "backgroundColor": "transparent",
      "borderRadius": 4,
      "height": 42,
      "margin": 0,
      "shadowColor": "#000",
      "shadowOffset": {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
      "width": 42,
    }
  }
  testID="icon-button-container-outer-layer"
>
  <View
    collapsable={false}
    style={
      {
        "backgroundColor": "transparent",
        "borderColor": "rgba(121, 116, 126, 1)",
        "borderRadius": 4,
        "borderWidth": 0,
        "elevation": 0,
        "flex": 1,
        "overflow": "hidden",
        "shadowColor": "#000",
        "shadowOffset": {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
      }
    }
    testID="icon-button-container"
  >
    <View
      accessibilityComponentType="button"
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": true,
          "expanded": undefined,
          "selected": false,
        }
      }
      accessibilityTraits={
        [
          "button",
          "disabled",
        ]
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      centered={true}
      collapsable={false}
      focusable={true}
      hitSlop={
        {
          "bottom": 6,
          "left": 6,
          "right": 6,
          "top": 6,
        }
      }
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          false,
          [
            {
              "alignItems": "center",
              "flexGrow": 1,
              "justifyContent": "center",
            },
            undefined,
          ],
        ]
      }
      testID="icon-button"
    >
      <Text
        accessibilityElementsHidden={true}
        importantForAccessibility="no-hide-descendants"
        pointerEvents="none"
        selectable={false}
        style={
          [
            {
              "color": "rgba(28, 27, 31, 0.38)",
              "fontSize": 24,
            },
            [
              {
                "lineHeight": 24,
                "transform": [
                  {
                    "scaleX": 1,
                  },
                ],
              },
              {
                "backgroundColor": "transparent",
              },
            ],
          ]
        }
      >
        heart
      </Text>
    </View>
  </View>
</View>
`;
