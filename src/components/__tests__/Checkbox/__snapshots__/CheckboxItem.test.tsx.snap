// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`can render leading checkbox control 1`] = `
<View
  accessibilityLabel="Default with leading control"
  accessibilityState={
    {
      "busy": undefined,
      "checked": false,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  role="checkbox"
  style={
    [
      false,
      undefined,
    ]
  }
>
  <View
    importantForAccessibility="no-hide-descendants"
    pointerEvents="none"
    style={
      [
        {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 16,
          "paddingVertical": 8,
        },
        undefined,
      ]
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": false,
          "disabled": true,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      role="checkbox"
      style={
        [
          {
            "overflow": "hidden",
          },
          {
            "borderRadius": 18,
            "padding": 6,
          },
        ]
      }
    >
      <View
        style={
          {
            "opacity": 0,
          }
        }
      >
        <Text
          accessibilityElementsHidden={true}
          allowFontScaling={false}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            [
              {
                "color": "rgba(103, 80, 164, 1)",
                "fontSize": 24,
              },
              [
                {
                  "lineHeight": 24,
                  "transform": [
                    {
                      "scaleX": 1,
                    },
                  ],
                },
                {
                  "backgroundColor": "transparent",
                },
              ],
            ]
          }
        >
          check
        </Text>
      </View>
    </View>
    <Text
      maxFontSizeMultiplier={1.5}
      style={
        [
          {
            "textAlign": "left",
          },
          {
            "color": "rgba(28, 27, 31, 1)",
            "writingDirection": "ltr",
          },
          [
            {
              "fontFamily": "System",
              "fontSize": 16,
              "fontWeight": "400",
              "letterSpacing": 0.15,
              "lineHeight": 24,
            },
            [
              {
                "flexGrow": 1,
                "flexShrink": 1,
              },
              {
                "color": "rgba(28, 27, 31, 1)",
                "textAlign": "right",
              },
              undefined,
            ],
          ],
        ]
      }
      testID="undefined-text"
    >
      Default with leading control
    </Text>
  </View>
</View>
`;

exports[`can render the Android checkbox on different platforms 1`] = `
<View
  accessibilityLabel="iOS Checkbox"
  accessibilityState={
    {
      "busy": undefined,
      "checked": false,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  role="checkbox"
  style={
    [
      false,
      undefined,
    ]
  }
>
  <View
    importantForAccessibility="no-hide-descendants"
    pointerEvents="none"
    style={
      [
        {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 16,
          "paddingVertical": 8,
        },
        undefined,
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={1.5}
      style={
        [
          {
            "textAlign": "left",
          },
          {
            "color": "rgba(28, 27, 31, 1)",
            "writingDirection": "ltr",
          },
          [
            {
              "fontFamily": "System",
              "fontSize": 16,
              "fontWeight": "400",
              "letterSpacing": 0.15,
              "lineHeight": 24,
            },
            [
              {
                "flexGrow": 1,
                "flexShrink": 1,
              },
              {
                "color": "rgba(28, 27, 31, 1)",
                "textAlign": "left",
              },
              undefined,
            ],
          ],
        ]
      }
      testID="undefined-text"
    >
      iOS Checkbox
    </Text>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": false,
          "disabled": true,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      role="checkbox"
      style={
        [
          {
            "overflow": "hidden",
          },
          {
            "borderRadius": 18,
            "height": 36,
            "padding": 6,
            "width": 36,
          },
        ]
      }
    >
      <View
        collapsable={false}
        style={
          {
            "transform": [
              {
                "scale": 1,
              },
            ],
          }
        }
      >
        <Text
          accessibilityElementsHidden={true}
          allowFontScaling={false}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            [
              {
                "color": "rgba(73, 69, 79, 1)",
                "fontSize": 24,
              },
              [
                {
                  "lineHeight": 24,
                  "transform": [
                    {
                      "scaleX": 1,
                    },
                  ],
                },
                {
                  "backgroundColor": "transparent",
                },
              ],
            ]
          }
        >
          checkbox-blank-outline
        </Text>
        <View
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "alignItems": "center",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "borderColor": "rgba(73, 69, 79, 1)",
                "borderWidth": 0,
                "height": 14,
                "width": 14,
              }
            }
          />
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`can render the iOS checkbox on different platforms 1`] = `
<View
  accessibilityLabel="iOS Checkbox"
  accessibilityState={
    {
      "busy": undefined,
      "checked": false,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  role="checkbox"
  style={
    [
      false,
      undefined,
    ]
  }
>
  <View
    importantForAccessibility="no-hide-descendants"
    pointerEvents="none"
    style={
      [
        {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 16,
          "paddingVertical": 8,
        },
        undefined,
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={1.5}
      style={
        [
          {
            "textAlign": "left",
          },
          {
            "color": "rgba(28, 27, 31, 1)",
            "writingDirection": "ltr",
          },
          [
            {
              "fontFamily": "System",
              "fontSize": 16,
              "fontWeight": "400",
              "letterSpacing": 0.15,
              "lineHeight": 24,
            },
            [
              {
                "flexGrow": 1,
                "flexShrink": 1,
              },
              {
                "color": "rgba(28, 27, 31, 1)",
                "textAlign": "left",
              },
              undefined,
            ],
          ],
        ]
      }
      testID="undefined-text"
    >
      iOS Checkbox
    </Text>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": false,
          "disabled": true,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      role="checkbox"
      style={
        [
          {
            "overflow": "hidden",
          },
          {
            "borderRadius": 18,
            "padding": 6,
          },
        ]
      }
    >
      <View
        style={
          {
            "opacity": 0,
          }
        }
      >
        <Text
          accessibilityElementsHidden={true}
          allowFontScaling={false}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            [
              {
                "color": "rgba(103, 80, 164, 1)",
                "fontSize": 24,
              },
              [
                {
                  "lineHeight": 24,
                  "transform": [
                    {
                      "scaleX": 1,
                    },
                  ],
                },
                {
                  "backgroundColor": "transparent",
                },
              ],
            ]
          }
        >
          check
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders unchecked 1`] = `
<View
  accessibilityLabel="Unchecked Button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": false,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  role="checkbox"
  style={
    [
      false,
      undefined,
    ]
  }
>
  <View
    importantForAccessibility="no-hide-descendants"
    pointerEvents="none"
    style={
      [
        {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 16,
          "paddingVertical": 8,
        },
        undefined,
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={1.5}
      style={
        [
          {
            "textAlign": "left",
          },
          {
            "color": "rgba(28, 27, 31, 1)",
            "writingDirection": "ltr",
          },
          [
            {
              "fontFamily": "System",
              "fontSize": 16,
              "fontWeight": "400",
              "letterSpacing": 0.15,
              "lineHeight": 24,
            },
            [
              {
                "flexGrow": 1,
                "flexShrink": 1,
              },
              {
                "color": "rgba(28, 27, 31, 1)",
                "textAlign": "left",
              },
              undefined,
            ],
          ],
        ]
      }
      testID="undefined-text"
    >
      Unchecked Button
    </Text>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": false,
          "disabled": true,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      role="checkbox"
      style={
        [
          {
            "overflow": "hidden",
          },
          {
            "borderRadius": 18,
            "padding": 6,
          },
        ]
      }
    >
      <View
        style={
          {
            "opacity": 0,
          }
        }
      >
        <Text
          accessibilityElementsHidden={true}
          allowFontScaling={false}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            [
              {
                "color": "rgba(103, 80, 164, 1)",
                "fontSize": 24,
              },
              [
                {
                  "lineHeight": 24,
                  "transform": [
                    {
                      "scaleX": 1,
                    },
                  ],
                },
                {
                  "backgroundColor": "transparent",
                },
              ],
            ]
          }
        >
          check
        </Text>
      </View>
    </View>
  </View>
</View>
`;
